enum MinimalGrammar[(GrammarSymbol, Seq[GrammarSymbol])]
File =              (File,              Seq(Base.Object, Base.Name, Code))
Code =              (Code,              Seq(Line, Maybe.MoreCode))
MoreCode =          (MoreCode,          Seq(Base.Newline, Code))
VarValLine =        (Line,              Seq(Maybe.Base.Var, Type, Base.Name, Base.Equal, Call))
PublicLine =        (Line,              Seq(Maybe.Base.Public, Type, Base.Name, Base.Equal, Call))
PrivateLine =       (Line,              Seq(Maybe.Base.Private, Type, Base.Name, Base.Equal, Call))
TemplateType =      (Type,              Seq(Base.Name, Base.OpenTemplate, InnerType, Base.CloseTemplate))
Type =              (Type,              Seq(Base.Name))
InnerType =         (InnerType,         Seq(Type, Maybe.MoreInnerType))
MoreInnerType =     (MoreInnerType,     Seq(Base.Comma, InnerType))
CallArgument =      (Call,              Seq(Base.OpenArgument, Call, MoreCall, Base.CloseArgument, MoreCall))
CallFetch =         (Call,              Seq(Fetch, MoreCall))
CallUniOp =         (Call,              Seq(UniOp, MoreCall))
CallValue =         (Call,              Seq(Value))
MoreCallFetch =     (MoreCall,          Seq(Base.Dot, Fetch, MoreCall))
MoreCallBinOp =     (MoreCall,          Seq(Base.BinOp, MoreCall))
MoreCallEmpty =     (MoreCall,          Seq())
FetchValue =        (Fetch,             Seq(Value, Base.Dot, RFetch))
FetchNameDot =      (Fetch,             Seq(Base.Name, Base.Dot, RFetch))
FetchName =         (Fetch,             Seq(Base.Name))
RFetchRFetch =      (RFetch,            Seq(Base.Name, Base.Dot, RFetch))
RFetch =            (RFetch,            Seq(Base.Name))
ValueFloat =        (Value,             Seq(Base.Float))
ValueInt =          (Value,             Seq(Base.Int))
ValueString =       (Value,             Seq(Base.String))
